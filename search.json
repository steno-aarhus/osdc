[{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement lwjohnst@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://steno-aarhus.github.io/osdc/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://steno-aarhus.github.io/osdc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022-2023 Steno Diabetes Center Aarhus Aarhus University Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://steno-aarhus.github.io/osdc/PULL_REQUEST_TEMPLATE.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"NA","text":"changes PURPOSE, REASON. Closes #","code":""},{"path":"https://steno-aarhus.github.io/osdc/PULL_REQUEST_TEMPLATE.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist","title":"NA","text":"Ran just run-docs added, Markdown formatted","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/algorithm.html","id":"general-description","dir":"Articles","previous_headings":"","what":"General description","title":"Algorithm","text":"complete description classifier found Anders Aasted Isaksen’s PhD Thesis well validation paper (1). description algorithm brief concise version documents. overall output algorithm first classify diabetes, classify check individuals might type 1 diabetes, otherwise classify type 2 diabetes. initial diabetes classification defined second occurrence listed inclusion events. Wherever possible, available data event used, except purchases glucose-lowering drugs, since data obstetric diagnoses necessary censor glucose-lowering drug purchases complete 1997 onwards. Inclusion criteria : HbA1c measurements ≥48 mmol/mol. Hospital diagnoses diabetes. Diabetes-specific services received podiatrist. Purchase glucose-lowering drugs. Exclusions : Samples taken pregnancies, potential gestational diabetes mellitus. Brand drugs weight loss, e.g. Saxenda. Purchases pregnancies, potential treatment gestational diabetes mellitus. Metformin women age 40, treatment polycystic ovary syndrome. Diabetes type classified either T1D T2D based patterns purchases insulin drugs (including analogues) hospital primary diagnoses T1D T2D. Classification T1D requires individual fulfill either following criteria: Must purchased insulin drugs never type glucose-lowering drugs, least one diagnosis T1D Must majority T1D diagnoses endocrinological departments (medical departments, absence contacts endocrinological departments), purchase insulin within 180 days onset diabetes, insulin contributing least two thirds defined daily doses glucose-lowering drugs purchased. populations generated fixed index date (cross-sectional studies associated dissertation), individuals classified T1D cases must purchased insulin drugs last year prior index date. Individuals classified T1D cases classified T2D cases.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/algorithm.html","id":"classifying-type-1-diabetes","dir":"Articles","previous_headings":"","what":"Classifying type 1 diabetes","title":"Algorithm","text":"Diabetes type classified either T1D T2D based patterns purchases insulin drugs (including analogues) hospital primary diagnoses T1D T2D. Classification T1D requires individual fulfill either following criteria: Must purchased insulin drugs never type glucose-lowering drugs, least one diagnosis T1D Must majority T1D diagnoses endocrinological departments (medical departments, absence contacts endocrinological departments), purchase insulin within 180 days onset diabetes, insulin contributing least two thirds defined daily doses glucose-lowering drugs purchased. populations generated fixed index date (cross-sectional studies associated dissertation), individuals classified T1D cases must purchased insulin drugs last year prior index date.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/algorithm.html","id":"classifying-type-2-diabetes","dir":"Articles","previous_headings":"","what":"Classifying type 2 diabetes","title":"Algorithm","text":"Individuals classified T1D cases classified T2D cases.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/algorithm.html","id":"detailed-and-technical-description","dir":"Articles","previous_headings":"","what":"Detailed and technical description","title":"Algorithm","text":"technical, exact implementation description. logical conditions exact variables registers used results classification diabetes status types. shown form tables register table end showing logic applied across registers.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/articles/changes.html","id":"specific-changes-since-the-original-validation-version-from-the-paper","dir":"Articles","previous_headings":"","what":"Specific changes since the original validation (version from the paper)","title":"Changes from original","text":"don’t use purchases semaglutid, dapagliflozin empagliflozin, neither inclusion events classification diabetes type (due increasing use treatment non-diabetes). longer use diabetes type reclassification based insulin purchases previous year. logic defining pregnancy index dates simplified use diagnoses pregnancy endings (longer uses data maternal care visits). De-duplicates subsequent HbA1c samples taken date (originally, sampling time available lab data, samples taken time de-duplicated) longer uses GLP1-RAs inclusion type-specification. diabetes type-classification, window 180 days T1D case must make purchase insulin now evaluated date first purchase glucose-lowering drug, rather inclusion date.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/changes.html","id":"version-1-1","dir":"Articles","previous_headings":"","what":"Version 1.1","title":"Changes from original","text":"don’t use purchases semaglutid, dapagliflozin empagliflozin, neither inclusion events classification diabetes type (due increasing use treatment non-diabetes). longer use diabetes type reclassification based insulin purchases previous year. logic defining pregnancy index dates simplified use diagnoses pregnancy endings (longer uses data maternal care visits). De-duplicates subsequent HbA1c samples taken date (originally, sampling time available lab data, samples taken time de-duplicated)","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/changes.html","id":"version-1-2","dir":"Articles","previous_headings":"","what":"Version 1.2","title":"Changes from original","text":"longer uses GLP1-RAs inclusion type-specification. diabetes type-classification, window 180 days T1D case must make purchase insulin now evaluated date first purchase glucose-lowering drug, rather inclusion date.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/changes.html","id":"validity","dir":"Articles","previous_headings":"","what":"Validity","title":"Changes from original","text":"Algorithm validity across versions. Reports PPV (positive predictive value) sensitivity typical cases cases atypical age onset T1D (age 40) T2D (age 40), respectively. Overall age onset-stratified (paper table 1 & 2): Bootstrapped metrics (paper S3):","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/changes.html","id":"on-pre-2019-data-as-in-the-paper","dir":"Articles","previous_headings":"","what":"On pre-2019 data (as in the paper)","title":"Changes from original","text":"Overall age onset-stratified (paper table 1 & 2): Bootstrapped metrics (paper S3):","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/changes.html","id":"potential-future-changes","dir":"Articles","previous_headings":"","what":"Potential future changes","title":"Changes from original","text":"Add support using medical birth register define pregnancies censor gestational diabetes (GDM). allow censoring glucose-lowering drug (GLD) purchases way back 1995 (rather 1997 onward, obstetric codes limited ), enable extension window valid dates diagnosis 1996 onward. Limit historic scope primary diagnoses used evaluate majority diabetes-specific diagnoses type classification (e.g. evaluate majority among last five type-specific diabetes diagnoses).","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"data-required-from-registers","dir":"Articles","previous_headings":"","what":"Data required from registers","title":"Data sources","text":"following list variables required specific registers order package classify diabetes status:","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"expected-data-structure","dir":"Articles","previous_headings":"","what":"Expected data structure","title":"Data sources","text":"section describes data sources listed table expected look like input OSDC algorithm. try mimic much possible raw data looks like within Denmark Statistics. since registers often stored per year basis, don’t expect year variable data . ’ve processed data year variable, likely need split-apply-combine approach using osdc package. internally convert variable names lower case, present lower case, case may vary data sources (even years data source) real data. small note National Patient Register. contains several tables types data. algorithm uses hospital diagnosis data contained four registers, pair two related registers used (LPR2) (LPR3) 2019. LPR2 LPR3 equivalents lpr_adm kontakter lpr_diag diagnoser. variables equivalents well, except c_spec LPR2 equivalent hovedspeciale_ans LPR3, specialty values hovedspeciale_ans coded literal specialty names different padded integer codes c_spec contains. Statistics Denmark, tables provided mix separate files calendar year prior 2019 (LPR2 format) single file containing data 2019 onward (LPR3 format). two tables can joined either recnum variable (LPR2 data) dw_ek_kontakt variable (LPR3 data). Variables descriptions within bef register. want see data look like, see simulate_registers(). Variables descriptions within lmdb register. want see data look like, see simulate_registers(). Variables descriptions within lpr_adm register. want see data look like, see simulate_registers(). Variables descriptions within lpr_diag register. want see data look like, see simulate_registers(). Variables descriptions within kontakter register. want see data look like, see simulate_registers(). Variables descriptions within diagnoser register. want see data look like, see simulate_registers(). Variables descriptions within sysi register. want see data look like, see simulate_registers(). Variables descriptions within sssy register. want see data look like, see simulate_registers(). Variables descriptions within lab_forsker register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"bef-cpr-registerets-befolkningstabel","dir":"Articles","previous_headings":"","what":"bef: CPR-registerets befolkningstabel","title":"Data sources","text":"Variables descriptions within bef register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"lmdb-laegemiddelstatistikregisteret","dir":"Articles","previous_headings":"","what":"lmdb: Laegemiddelstatistikregisteret","title":"Data sources","text":"Variables descriptions within lmdb register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"lpr_adm-landspatientregisterets-administrationstabel-lpr2","dir":"Articles","previous_headings":"","what":"lpr_adm: Landspatientregisterets administrationstabel (LPR2)","title":"Data sources","text":"Variables descriptions within lpr_adm register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"lpr_diag-landspatientregisterets-diagnosetabel-lpr2","dir":"Articles","previous_headings":"","what":"lpr_diag: Landspatientregisterets diagnosetabel (LPR2)","title":"Data sources","text":"Variables descriptions within lpr_diag register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"kontakter-landspatientregisterets-kontakttabel-lpr3","dir":"Articles","previous_headings":"","what":"kontakter: Landspatientregisterets kontakttabel (LPR3)","title":"Data sources","text":"Variables descriptions within kontakter register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"diagnoser-landspatientregisterets-diagnosetabel-lpr3","dir":"Articles","previous_headings":"","what":"diagnoser: Landspatientregisterets diagnosetabel (LPR3)","title":"Data sources","text":"Variables descriptions within diagnoser register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"sysi-sygesikringsregisteret","dir":"Articles","previous_headings":"","what":"sysi: Sygesikringsregisteret","title":"Data sources","text":"Variables descriptions within sysi register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"sssy-sygesikringsregisteret","dir":"Articles","previous_headings":"","what":"sssy: Sygesikringsregisteret","title":"Data sources","text":"Variables descriptions within sssy register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"lab_forsker-laboratoriedatabasens-forskertabel","dir":"Articles","previous_headings":"","what":"lab_forsker: Laboratoriedatabasens forskertabel","title":"Data sources","text":"Variables descriptions within lab_forsker register. want see data look like, see simulate_registers().","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/data-sources.html","id":"getting-access-to-data","dir":"Articles","previous_headings":"","what":"Getting access to data","title":"Data sources","text":"data available Statistics Denmark Danish Health Data Authority. Researchers must affiliated approved research institute Denmark fees apply. Information gain access data can found https://www.dst.dk/en/TilSalg/Forskningsservice.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"principles","dir":"Articles","previous_headings":"","what":"Principles","title":"Design","text":"guiding principles package: Functionality agnostic data format possible (e.g. can used SQL Arrow connections, data.table format, data.frame). Functions consistent inputs outputs (e.g. inputs outputs , regardless specific conditions). Functions predictable outputs based inputs (e.g. input data.frame, output data.frame). Functions consistent naming based action. Functions limited additional arguments. Casing input variables (upper lower case) agnostic, internal variables lower case, output variables lower case.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"use-cases","dir":"Articles","previous_headings":"","what":"Use cases","title":"Design","text":"make assumptions package used, based experiences expectations use cases: expect package : Entirely used within Denmark Statistics Danish Health Authority’s servers, since data kept. Used researchers within affiliated Danish research institutions. Used specifically within Danish register-based context. set “narratives” “personas” associated needs package aims fulfill. “researcher, …” “… want easily get overview Danish registers variables need request Denmark Statistics Danish Health Data Authority, able classify diabetes status individuals registers using osdc package.” “… want easily simply create dataset contains data diabetes status population, can begin conducting research involves persons diabetes without tinker coding correct algorithm classify .” “… want informed early clear way whether data fits required data types, can fix correct issues without extensive debugging code /data.”","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"core-functionality","dir":"Articles","previous_headings":"","what":"Core functionality","title":"Design","text":"list core functionality osdc package: Classifies individuals’ diabetes type (type 1 2) Outputs single data frame including individuals diabetes, type (type 1 2), date onset classified algorithm. Internally checks individual registers variables required algorithm. Provides list required variables registers order calculate diabetes status. Provides internal checks whether variables match expected data types. Provides common easily accessible standard determining diabetes status within context research using Danish registers.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"function-conventions","dir":"Articles","previous_headings":"","what":"Function conventions","title":"Design","text":"effectively develop user-facing internal functions, follow conventions design patterns building functions. conventions describe : naming patterns functions arguments, argument input requirements, output data structure. conventions ideals , used guidelines help development understanding code; hard rules. First word action verb, later words objects conditions. Functions filter dropping rows based specific criteria prefixed drop_. Functions filter keeping rows based specific criteria prefixed keep_. Helpers add columns needed classification prefixed add_. Helpers join output functions prefixed join_. Functions prepare process register data prefixed prepare_. arguments possible, core required arguments possible (ideally one two). One input register database time. drop_ functions can take register first argument take output keep_ function. functions take data.frame type object input. input object doesn’t need strictly data.frame long acts like data.frame. instance, data.table, tibble, duckdb object. first argument always take data frame type object. second argument output data frame object another function. functions output type object input object (data.frame type object). instance, input data.table object, output also data.table.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"naming","dir":"Articles","previous_headings":"","what":"Naming","title":"Design","text":"First word action verb, later words objects conditions. Functions filter dropping rows based specific criteria prefixed drop_. Functions filter keeping rows based specific criteria prefixed keep_. Helpers add columns needed classification prefixed add_. Helpers join output functions prefixed join_. Functions prepare process register data prefixed prepare_.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"input","dir":"Articles","previous_headings":"","what":"Input","title":"Design","text":"arguments possible, core required arguments possible (ideally one two). One input register database time. drop_ functions can take register first argument take output keep_ function. functions take data.frame type object input. input object doesn’t need strictly data.frame long acts like data.frame. instance, data.table, tibble, duckdb object. first argument always take data frame type object. second argument output data frame object another function.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"output","dir":"Articles","previous_headings":"","what":"Output","title":"Design","text":"functions output type object input object (data.frame type object). instance, input data.table object, output also data.table.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"interface","dir":"Articles","previous_headings":"","what":"Interface","title":"Design","text":"osdc package contains one main function classifies individuals either type 1 type 2 diabetes using Danish registers: classify_diabetes(). function classifies diabetes (type 1 2) based Danish registers described vignette(\"design\") vignette(\"data-sources\"). data sources needed osdc used input function. specific details classification algorithm described vignette(\"algorithm\"). one argument classify_diabetes() required register. names descriptions arguments follows: bef: register called ‘CPR-registerets befolkningstabel’ Danish. lmdb: register called ‘Laegemiddelstatistikregisteret’ Danish. lpr_adm: register called ‘Landspatientregisterets administrationstabel (LPR2)’ Danish. lpr_diag: register called ‘Landspatientregisterets diagnosetabel (LPR2)’ Danish. kontakter: register called ‘Landspatientregisterets kontakttabel (LPR3)’ Danish. diagnoser: register called ‘Landspatientregisterets diagnosetabel (LPR3)’ Danish. sysi: register called ‘Sygesikringsregisteret’ Danish. sssy: register called ‘Sygesikringsregisteret’ Danish. lab_forsker: register called ‘Laboratoriedatabasens forskertabel’ Danish. output data.frame type object includes four columns: pnr: pseudonymised social security number individuals diabetes population (one row per individual). stable_inclusion_date: stable inclusion date (.e., raw date mutated individuals included time-period data coverage sufficient make incident cases reliable)1. raw_inclusion_date: raw inclusion date (.e., date second inclusion event described vignette(\"algorithm\")). diabetes_type: classified diabetes type. example, see . Example rows data.frame output osdc package. individuals 1 4 classified diabetes (either has_t1d has_t2d, respectively). 1 classified type 1 diabetes (T1D) inclusion date 2020-01-01. Since date within time-period sufficient data coverage, column stable_inclusion_date populated date raw_inclusion_date. individual second row, 4 classified type 2 diabetes T2D inclusion date 1995-19-04. Since 1995 within time-period insufficient data coverage, stable_inclusion_date NULL. However, raw_inclusion_date still contains inclusion date individual.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"input-1","dir":"Articles","previous_headings":"","what":"Input","title":"Design","text":"one argument classify_diabetes() required register. names descriptions arguments follows: bef: register called ‘CPR-registerets befolkningstabel’ Danish. lmdb: register called ‘Laegemiddelstatistikregisteret’ Danish. lpr_adm: register called ‘Landspatientregisterets administrationstabel (LPR2)’ Danish. lpr_diag: register called ‘Landspatientregisterets diagnosetabel (LPR2)’ Danish. kontakter: register called ‘Landspatientregisterets kontakttabel (LPR3)’ Danish. diagnoser: register called ‘Landspatientregisterets diagnosetabel (LPR3)’ Danish. sysi: register called ‘Sygesikringsregisteret’ Danish. sssy: register called ‘Sygesikringsregisteret’ Danish. lab_forsker: register called ‘Laboratoriedatabasens forskertabel’ Danish.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/design.html","id":"output-1","dir":"Articles","previous_headings":"","what":"Output","title":"Design","text":"output data.frame type object includes four columns: pnr: pseudonymised social security number individuals diabetes population (one row per individual). stable_inclusion_date: stable inclusion date (.e., raw date mutated individuals included time-period data coverage sufficient make incident cases reliable)1. raw_inclusion_date: raw inclusion date (.e., date second inclusion event described vignette(\"algorithm\")). diabetes_type: classified diabetes type. example, see . Example rows data.frame output osdc package. individuals 1 4 classified diabetes (either has_t1d has_t2d, respectively). 1 classified type 1 diabetes (T1D) inclusion date 2020-01-01. Since date within time-period sufficient data coverage, column stable_inclusion_date populated date raw_inclusion_date. individual second row, 4 classified type 2 diabetes T2D inclusion date 1995-19-04. Since 1995 within time-period insufficient data coverage, stable_inclusion_date NULL. However, raw_inclusion_date still contains inclusion date individual.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/osdc.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Getting started","text":"First, let’s load package, well dplyr. core package depends list variables within different registers needed order classify diabetes status individual. can found list:","code":"library(dplyr) library(osdc) registers() #> $bef #> $bef$name #> [1] \"CPR-registerets befolkningstabel\" #>  #> $bef$start_year #> [1] 1968 #>  #> $bef$end_year #> [1] NA #>  #> $bef$variables #> # A tibble: 3 × 4 #>   name      danish_description         english_description             data_type #>   <chr>     <chr>                      <chr>                           <list>    #> 1 pnr       Pseudonymiseret cpr-nummer Pseudonymised social security … <chr [1]> #> 2 koen      Koen                       Gender/sex                      <chr [1]> #> 3 foed_dato Foedselsdato               Date of birth                   <chr [2]> #>  #>  #> $lmdb #> $lmdb$name #> [1] \"Laegemiddelstatistikregisteret\" #>  #> $lmdb$start_year #> [1] 1995 #>  #> $lmdb$end_year #> [1] NA #>  #> $lmdb$variables #> # A tibble: 6 × 4 #>   name   danish_description                 english_description        data_type #>   <chr>  <chr>                              <chr>                      <list>    #> 1 pnr    Pseudonymiseret cpr-nummer         Pseudonymised social secu… <chr [1]> #> 2 eksd   Ekspeditionsdato                   Date of purchase           <chr [2]> #> 3 atc    ATC-kode (fuldt specificeret)      ATC code (fully specified) <chr [1]> #> 4 volume Antal standarddoser (DDD) i pakken Number of daily standard … <chr [1]> #> 5 apk    Antal pakker koebt                 Number of packages purcha… <chr [1]> #> 6 indo   Indikationskode for recept         Indication code            <chr [1]> #>  #>  #> $lpr_adm #> $lpr_adm$name #> [1] \"Landspatientregisterets administrationstabel (LPR2)\" #>  #> $lpr_adm$start_year #> [1] 1977 #>  #> $lpr_adm$end_year #> [1] 2018 #>  #> $lpr_adm$variables #> # A tibble: 4 × 4 #>   name     danish_description                    english_description   data_type #>   <chr>    <chr>                                 <chr>                 <list>    #> 1 pnr      Pseudonymiseret cpr-nummer            Pseudonymised social… <chr [1]> #> 2 recnum   Kontakt id-nummer                     Record id number      <chr [1]> #> 3 d_inddto Indlaeggelsesdato (start paa kontakt) Date of admission or… <chr [2]> #> 4 c_spec   Afdelings specialekode                Specialty code of de… <chr [1]> #>  #>  #> $lpr_diag #> $lpr_diag$name #> [1] \"Landspatientregisterets diagnosetabel (LPR2)\" #>  #> $lpr_diag$start_year #> [1] 1977 #>  #> $lpr_diag$end_year #> [1] 2018 #>  #> $lpr_diag$variables #> # A tibble: 3 × 4 #>   name       danish_description english_description data_type #>   <chr>      <chr>              <chr>               <chr>     #> 1 recnum     Kontakt id-nummer  Record id number    character #> 2 c_diag     Diagnosekode       Diagnosis code      character #> 3 c_diagtype Diagnosetype       Diagnosis type      character #>  #>  #> $kontakter #> $kontakter$name #> [1] \"Landspatientregisterets kontakttabel (LPR3)\" #>  #> $kontakter$start_year #> [1] 2019 #>  #> $kontakter$end_year #> [1] NA #>  #> $kontakter$variables #> # A tibble: 4 × 4 #>   name              danish_description             english_description data_type #>   <chr>             <chr>                          <chr>               <list>    #> 1 cpr               Pseudonymiseret cpr-nummer     Pseudonymised soci… <chr [1]> #> 2 dw_ek_kontakt     Kontakt id-nummer              Record id number    <chr [1]> #> 3 dato_start        Indlaeggelsesdato (start paa … Date of admission … <chr [2]> #> 4 hovedspeciale_ans Afdelings speciale             Specialty of depar… <chr [1]> #>  #>  #> $diagnoser #> $diagnoser$name #> [1] \"Landspatientregisterets diagnosetabel (LPR3)\" #>  #> $diagnoser$start_year #> [1] 2019 #>  #> $diagnoser$end_year #> [1] NA #>  #> $diagnoser$variables #> # A tibble: 4 × 4 #>   name              danish_description             english_description data_type #>   <chr>             <chr>                          <chr>               <chr>     #> 1 dw_ek_kontakt     Kontakt id-nummer              Record id number    character #> 2 diagnosekode      Diagnosekode                   Diagnosis code      character #> 3 diagnosetype      Diagnosetype                   Diagnosis type      character #> 4 senere_afkraeftet Blev diagnosen senere afkraef… Was the diagnosis … character #>  #>  #> $sysi #> $sysi$name #> [1] \"Sygesikringsregisteret\" #>  #> $sysi$start_year #> [1] 1990 #>  #> $sysi$end_year #> [1] 2005 #>  #> $sysi$variables #> # A tibble: 4 × 4 #>   name     danish_description                    english_description   data_type #>   <chr>    <chr>                                 <chr>                 <chr>     #> 1 pnr      Pseudonymiseret cpr-nummer            Pseudonymised social… character #> 2 barnmak  Blev ydelse ydet til patientens barn? Was the service prov… integer   #> 3 speciale Ydelsens honoreringskode              Billing code of the … character #> 4 honuge   Aar og uge for ydelse                 Year and week of ser… character #>  #>  #> $sssy #> $sssy$name #> [1] \"Sygesikringsregisteret\" #>  #> $sssy$start_year #> [1] 2006 #>  #> $sssy$end_year #> [1] NA #>  #> $sssy$variables #> # A tibble: 4 × 4 #>   name     danish_description                    english_description   data_type #>   <chr>    <chr>                                 <chr>                 <chr>     #> 1 pnr      Pseudonymiseret cpr-nummer            Pseudonymised social… character #> 2 barnmak  Blev ydelse ydet til patientens barn? Was the service prov… integer   #> 3 speciale Ydelsens honoreringskode              Billing code of the … character #> 4 honuge   Aar og uge for ydelse                 Year and week of ser… character #>  #>  #> $lab_forsker #> $lab_forsker$name #> [1] \"Laboratoriedatabasens forskertabel\" #>  #> $lab_forsker$start_year #> [1] 2011 #>  #> $lab_forsker$end_year #> [1] NA #>  #> $lab_forsker$variables #> # A tibble: 4 × 4 #>   name         danish_description           english_description        data_type #>   <chr>        <chr>                        <chr>                      <list>    #> 1 patient_cpr  Pseudonymiseret cpr-nummer   Pseudonymised social secu… <chr [1]> #> 2 samplingdate Dato for proevetagning       Date of sampling           <chr [2]> #> 3 analysiscode Analysens NPU-kode           NPU code of analysis       <chr [1]> #> 4 value        Numerisk resultat af analyse Numerical result of analy… <chr [1]>"},{"path":"https://steno-aarhus.github.io/osdc/articles/rationale.html","id":"identifying-type-1-and-2-diabetes-cases-in-danish-healthcare-registers","dir":"Articles","previous_headings":"","what":"Identifying type 1 and 2 diabetes cases in Danish healthcare registers","title":"Rationale","text":"Many individual-level data (e.g. civil registration, public healthcare contacts, drug prescriptions) automatically collected residents Denmark stored nationwide Danish registers Statistics Denmark Danish Health Data Authority. agencies legally allowed give access register data research purposes, provides (authorized) researchers set common, extensive data sources use studies. researcher associated approved Danish research institute (mainly Danish universities) can apply access, fees conditions apply. Register data generally accessed processed approved researchers remote servers operated Statistics Denmark Danish Health Data Authority. raw data used researchers, coupled common virtual working environment, potential enable reproducible research. means data processing workflow transferable reusable research projects underlying code designed reproducibility mind code shared (“open-sourced”) (2). reproducibility research relates transparent reporting methods enable others reproduce analyses experiments, also applies diabetes classification program, - reproducible - reused researcher access necessary register data dynamically identify study population individuals diabetes research needs (3). Denmark, National Diabetes Register, established 2006, first resource readily available researchers use identifying diabetes cases register data (4) . However, discontinued 2012. next resource Register Selected Chronic Diseases (RSCD), launched 2014. currently publicly available resource identify diabetes cases Danish register data (application Danish Health Data Authority).","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/rationale.html","id":"danish-register-data-infrastructure","dir":"Articles","previous_headings":"","what":"Danish register data infrastructure","title":"Rationale","text":"Many individual-level data (e.g. civil registration, public healthcare contacts, drug prescriptions) automatically collected residents Denmark stored nationwide Danish registers Statistics Denmark Danish Health Data Authority. agencies legally allowed give access register data research purposes, provides (authorized) researchers set common, extensive data sources use studies. researcher associated approved Danish research institute (mainly Danish universities) can apply access, fees conditions apply. Register data generally accessed processed approved researchers remote servers operated Statistics Denmark Danish Health Data Authority. raw data used researchers, coupled common virtual working environment, potential enable reproducible research. means data processing workflow transferable reusable research projects underlying code designed reproducibility mind code shared (“open-sourced”) (2). reproducibility research relates transparent reporting methods enable others reproduce analyses experiments, also applies diabetes classification program, - reproducible - reused researcher access necessary register data dynamically identify study population individuals diabetes research needs (3).","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/rationale.html","id":"current-danish-register-based-diabetes-classifiers","dir":"Articles","previous_headings":"","what":"Current Danish register-based diabetes classifiers","title":"Rationale","text":"Denmark, National Diabetes Register, established 2006, first resource readily available researchers use identifying diabetes cases register data (4) . However, discontinued 2012. next resource Register Selected Chronic Diseases (RSCD), launched 2014. currently publicly available resource identify diabetes cases Danish register data (application Danish Health Data Authority).","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/rationale.html","id":"challenges-in-current-classifiers","dir":"Articles","previous_headings":"","what":"Challenges in current classifiers","title":"Rationale","text":"General-purpose registers administrative databases often provide basis diabetes epidemiology, rarely contain validated diabetes-specific data, may introduce bias studies using data. important accurate tool identify individuals diabetes registers, findings may differ various diabetes definitions (5,6). Considerable efforts made towards establishing tool diabetes research several countries, including Denmark (7–9). general population, classification algorithms (classifiers) need identify type 1 diabetes well type 2 diabetes, also account events might lead inclusion non-cases, use glucose-lowering drugs treatment conditions. Currently, type-specific diabetes classifier validated general population, leaves register-based studies area vulnerable biases. Denmark, limitation (flaw) RSCD publicly validated source code behind algorithm made publicly available. Notably, algorithm lacks inclusion based elevated HbA1c levels (10). Likewise, National Diabetes Register, since discontinued 2012, validation study question validity called future registers adopt inclusion based elevated HbA1c levels (11). Since launch RSCD, nationwide laboratory data HbA1c testing become available Danish register ecosystem (12), data yet incorporated available diabetes classifiers.","code":""},{"path":"https://steno-aarhus.github.io/osdc/articles/rationale.html","id":"diabetes-classification-algorithms","dir":"Articles","previous_headings":"","what":"Diabetes classification algorithms","title":"Rationale","text":"currently available register-based diabetes classifiers yet incorporate emerging register data routine HbA1c testing. Wishing take advantage data, developed Open Source Diabetes Classifier (OSDC). Detailed discussion advantages disadvantages ’s design found Anders Aasted Isaksen’s thesis, chapter discussing methods. aimed developing algorithm : Stimulate discussion within Denmark openness ease use existing classifiers diabetes registers, need official process updating contributing existing data sources diabetes status. algorithm package may end used official institutions, can serve starting point improve current state diabetes classification Denmark inspiration might designed. Provide open-source, code-based algorithm R package classify type 1 type 2 diabetes based data Danish registers. implemented R package researchers can easily build database individuals diabetes quickly waiting official source implemented.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Signe Kirk Brødbæk. Author. Anders Aasted Isaksen. Author. Luke William Johnston. Author, maintainer. Steno Diabetes Center Aarhus. Copyright holder. Aarhus University. Copyright holder.","code":""},{"path":"https://steno-aarhus.github.io/osdc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brødbæk SK, Isaksen AA, Johnston LW (2025). osdc: Open Source Diabetes Classifier Danish Registers. R package version 0.7.0, https://github.com/steno-aarhus/osdc.","code":"@Manual{,   title = {osdc: Open Source Diabetes Classifier for Danish Registers},   author = {Signe Kirk Brødbæk and Anders Aasted Isaksen and Luke William Johnston},   year = {2025},   note = {R package version 0.7.0},   url = {https://github.com/steno-aarhus/osdc}, }"},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Open Source Diabetes Classifier for Danish Registers","text":"goal osdc (Open Source Diabetes Classifier) expose algorithm classifying diabetes within Danish registers can accessible R package. algorithm developed Steno Diabetes Center Aarhus flexible convenient use, validated terms accuracy. algorithms used throughout Denmark Danish register research, usually textual descriptions , rather code-based descriptions (e.g. Register Selected Chronic Diseases). project, aim make easier explicit classify type 1 type 2 diabetes within Danish register context. original implementation algorithm validated peer-reviewed publication , expect make tweaks algorithm time. changes transparent osdc repository.","code":""},{"path":"https://steno-aarhus.github.io/osdc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Open Source Diabetes Classifier for Danish Registers","text":"can install development version osdc GitHub : install dependencies development , like simulating data running full test suite, use:","code":"# install.packages(\"pak\") pak::pak(\"steno-aarhus/osdc\") pak::pak(\"steno-aarhus/osdc\", dependencies = \"all\")"},{"path":"https://steno-aarhus.github.io/osdc/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Open Source Diabetes Classifier for Danish Registers","text":"developing package, use justfile simplify development workflow make explicit. justfile contains commands runs formatters, various checks like CRAN checks spelling checks, tests, builds files website (doesn’t publish ). use ensure consistent development workflow forget run important checks committing changes. example, make pull request contribute changes, run following command Terminal project directory:","code":"just run-all"},{"path":"https://steno-aarhus.github.io/osdc/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Open Source Diabetes Classifier for Danish Registers","text":"Please note osdc project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://steno-aarhus.github.io/osdc/index.html","id":"citing-the-package","dir":"","previous_headings":"","what":"Citing the package","title":"Open Source Diabetes Classifier for Danish Registers","text":"use package, please cite ! Use citation() generate citation.","code":"citation(\"osdc\")"},{"path":"https://steno-aarhus.github.io/osdc/reference/add_insulin_purchases_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add columns for information about insulin drug purchases — add_insulin_purchases_cols","title":"Add columns for information about insulin drug purchases — add_insulin_purchases_cols","text":"Add columns information insulin drug purchases","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/add_insulin_purchases_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add columns for information about insulin drug purchases — add_insulin_purchases_cols","text":"","code":"add_insulin_purchases_cols(gld_hba1c_after_drop_steps)"},{"path":"https://steno-aarhus.github.io/osdc/reference/add_insulin_purchases_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add columns for information about insulin drug purchases — add_insulin_purchases_cols","text":"gld_hba1c_after_drop_steps GLD HbA1c data drop steps","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/add_insulin_purchases_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add columns for information about insulin drug purchases — add_insulin_purchases_cols","text":"type input data, default tibble::tibble(). Three new columns added: has_two_thirds_insulin: logical variable used classifying type 1 diabetes. See algorithm() details. has_only_insulin_purchases: logical variable used classifying type 1 diabetes. See algorithm() details. has_insulin_purchases_within_180_days: logical variable used classifying type 1 diabetes. See algorithm() details.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/add_insulin_purchases_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add columns for information about insulin drug purchases — add_insulin_purchases_cols","text":"","code":"if (FALSE) { # \\dontrun{ simulate_registers(\"lmdb\", 10000)[[1]] |>   keep_gld_purchases() |>   add_insulin_purchases_cols() } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/add_t1d_diagnoses_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add columns related to type 1 diabetes diagnoses — add_t1d_diagnoses_cols","title":"Add columns related to type 1 diabetes diagnoses — add_t1d_diagnoses_cols","text":"function evaluates whether individual majority type 1 diabetes-specific hospital diagnoses (DE10) among type-specific diabetes primary diagnoses (DE10 & DE11) endocrinology departments. individual type-specific diabetes diagnoses endocrinology departments, majority determined diagnoses medical departments.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/add_t1d_diagnoses_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add columns related to type 1 diabetes diagnoses — add_t1d_diagnoses_cols","text":"","code":"add_t1d_diagnoses_cols(data)"},{"path":"https://steno-aarhus.github.io/osdc/reference/add_t1d_diagnoses_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add columns related to type 1 diabetes diagnoses — add_t1d_diagnoses_cols","text":"data Data keep_diabetes_diagnoses() function.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/add_t1d_diagnoses_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add columns related to type 1 diabetes diagnoses — add_t1d_diagnoses_cols","text":"type input data, default tibble::tibble(), following added columns two rows per individual: has_majority_t1d_diagnoses: logical vector indicating whether majority primary diagnoses related type 1 diabetes. has_any_t1d_primary_diagnosis: logical vector indicating whether least one primary diagnosis related type 1 diabetes.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/add_t1d_diagnoses_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add columns related to type 1 diabetes diagnoses — add_t1d_diagnoses_cols","text":"also adds column indicating whether individual least one primary diagnosis related type 1 diabetes. output passed join_inclusions() function, dates variable used final step inclusion process. variables whether majority diagnoses type 1 diabetes used later classification type 1 diabetes.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of the algorithmic logic underlying osdc. — algorithm","title":"A list of the algorithmic logic underlying osdc. — algorithm","text":"nested list contains logic details algorithm.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of the algorithmic logic underlying osdc. — algorithm","text":"","code":"algorithm()"},{"path":"https://steno-aarhus.github.io/osdc/reference/algorithm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of the algorithmic logic underlying osdc. — algorithm","text":"list nested lists named elements: register Optional. register used logic title title use displaying logic tables. logic logic . comments additional comments logic.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/algorithm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A list of the algorithmic logic underlying osdc. — algorithm","text":"nested list algorithmic logic. Contains fields register, title, logic, comments.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/algorithm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list of the algorithmic logic underlying osdc. — algorithm","text":"","code":"algorithm()$is_hba1c_over_threshold #> $register #> [1] \"lab_forsker\" #>  #> $title #> [1] \"HbA1c values over threshold\" #>  #> $logic #> [1] \"(analysiscode == 'NPU27300' AND value >= 48) OR (analysiscode == 'NPU03835' AND value >= 6.5)\" #>  #> $comments #> [1] \"Is the IFCC units for NPU27300 and DCCT units for NPU03835.\" #>  algorithm()$is_gld_code$logic #> [1] \"atc =~ '^A10' AND NOT (atc =~ '^(A10BJ|A10BK01|A10BK03)')\""},{"path":"https://steno-aarhus.github.io/osdc/reference/check_data_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data types of the register variables — check_data_types","title":"Check data types of the register variables — check_data_types","text":"Check data types register variables","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/check_data_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data types of the register variables — check_data_types","text":"","code":"check_data_types(data, register, call = rlang::caller_env())"},{"path":"https://steno-aarhus.github.io/osdc/reference/check_data_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data types of the register variables — check_data_types","text":"Outputs register required variables, column names lower case.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/check_data_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check data types of the register variables — check_data_types","text":"","code":"if (FALSE) { # \\dontrun{ check_data_types(simulate_registers(\"kontakter\")[[1]], \"kontakter\") } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_diabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify diabetes status using Danish registers. — classify_diabetes","title":"Classify diabetes status using Danish registers. — classify_diabetes","text":"Classify diabetes status using Danish registers.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_diabetes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify diabetes status using Danish registers. — classify_diabetes","text":"","code":"classify_diabetes(   kontakter,   diagnoser,   lpr_diag,   lpr_adm,   sysi,   sssy,   lab_forsker,   bef,   lmdb,   stable_inclusion_start_date = \"1998-01-01\" )"},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_diabetes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify diabetes status using Danish registers. — classify_diabetes","text":"kontakter contacts register lpr3 diagnoser diagnoses register lpr3 lpr_diag diagnoses register lpr2 lpr_adm admissions register lpr2 sysi SYSI register sssy SSSY register lab_forsker lab forsker register bef BEF register lmdb LMDB register stable_inclusion_start_date Cutoff date inclusion events considered reliable (e.g., changes drug labeling data entry practices). Defaults \"1998-01-01\" one year obstetric codes reliable GLD data (since use LPR data drop rows related gestational diabetes). limits included cohort individuals inclusion dates cutoff date.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_diabetes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify diabetes status using Danish registers. — classify_diabetes","text":"object type input data, tibble::tibble() type object.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_diabetes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify diabetes status using Danish registers. — classify_diabetes","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(   c(     \"kontakter\",     \"diagnoser\",     \"lpr_diag\",     \"lpr_adm\",     \"sysi\",     \"sssy\",     \"lab_forsker\",     \"bef\",     \"lmdb\"   ),   n = 10000 ) classify_diabetes(   kontakter = register_data$kontakter,   diagnoser = register_data$diagnoser,   lpr_diag = register_data$lpr_diag,   lpr_adm = register_data$lpr_adm,   sysi = register_data$sysi,   sssy = register_data$sssy,   lab_forsker = register_data$lab_forsker,   bef = register_data$bef,   lmdb = register_data$lmdb ) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_t1d.html","id":null,"dir":"Reference","previous_headings":"","what":"After filtering, classify those with type 1 diabetes. — classify_t1d","title":"After filtering, classify those with type 1 diabetes. — classify_t1d","text":"filtering, classify type 1 diabetes.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_t1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"After filtering, classify those with type 1 diabetes. — classify_t1d","text":"","code":"classify_t1d(data)"},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_t1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"After filtering, classify those with type 1 diabetes. — classify_t1d","text":"data Joined data output filtering steps.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/classify_t1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"After filtering, classify those with type 1 diabetes. — classify_t1d","text":"object type input data, tibble::tibble() type object.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/column_names_to_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert column names to lower case — column_names_to_lower","title":"Convert column names to lower case — column_names_to_lower","text":"Convert column names lower case","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/column_names_to_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert column names to lower case — column_names_to_lower","text":"","code":"column_names_to_lower(data)"},{"path":"https://steno-aarhus.github.io/osdc/reference/column_names_to_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert column names to lower case — column_names_to_lower","text":"data data frame type object.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/column_names_to_lower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert column names to lower case — column_names_to_lower","text":"object type given.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/column_names_to_lower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert column names to lower case — column_names_to_lower","text":"","code":"if (FALSE) { # \\dontrun{ tibble::tibble(A = 1:3, B = 4:6) |>   osdc:::column_names_to_lower() } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_atc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector with random ATC codes — create_fake_atc","title":"Create a vector with random ATC codes — create_fake_atc","text":"Anatomical Therapeutic Chemical (ATC) codes unique medicine codes based organ system works works.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_atc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector with random ATC codes — create_fake_atc","text":"","code":"create_fake_atc(n)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_atc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector with random ATC codes — create_fake_atc","text":"n number random ATC codes generate.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_atc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector with random ATC codes — create_fake_atc","text":"character vector ATC codes.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_atc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector with random ATC codes — create_fake_atc","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_atc(10) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Create fake dates — create_fake_date","title":"Create fake dates — create_fake_date","text":"Create fake dates","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create fake dates — create_fake_date","text":"","code":"create_fake_date(n, from = \"1977-01-01\", to = lubridate::today())"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create fake dates — create_fake_date","text":"n number dates generate. date determining first date interval sample . date determining last date interval sample .","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create fake dates — create_fake_date","text":"vector dates.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create fake dates — create_fake_date","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_date(20) create_fake_date(20, \"1995-04-19\", \"2024-04-19\") } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_hovedspeciale_ans.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of random department specialties — create_fake_hovedspeciale_ans","title":"Create a vector of random department specialties — create_fake_hovedspeciale_ans","text":"Create vector random department specialties","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_hovedspeciale_ans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of random department specialties — create_fake_hovedspeciale_ans","text":"","code":"create_fake_hovedspeciale_ans(n)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_hovedspeciale_ans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of random department specialties — create_fake_hovedspeciale_ans","text":"n number department specialties create.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_hovedspeciale_ans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of random department specialties — create_fake_hovedspeciale_ans","text":"character vector.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_hovedspeciale_ans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector of random department specialties — create_fake_hovedspeciale_ans","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_hovedspeciale_ans(1000) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector with random ICD-8 or -10 diagnoses — create_fake_icd","title":"Create a vector with random ICD-8 or -10 diagnoses — create_fake_icd","text":"Create vector random ICD-8 -10 diagnoses","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector with random ICD-8 or -10 diagnoses — create_fake_icd","text":"","code":"create_fake_icd(n, date = NULL)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector with random ICD-8 or -10 diagnoses — create_fake_icd","text":"n number ICD-8 -10 diagnoses generate. date date determining whether diagnoses ICD-8 ICD-10. null, random date sampled determine ICD revision diagnosis . Danish registers, ICD-10 used 1994.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector with random ICD-8 or -10 diagnoses — create_fake_icd","text":"character vector ICD-10 diagnoses.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector with random ICD-8 or -10 diagnoses — create_fake_icd","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_icd(10) create_fake_icd(5, \"1995-04-19\") } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd10.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","title":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","text":"ICD-10 10th revision International Classification Diseases.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","text":"","code":"create_fake_icd10(n)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","text":"stored CSV downloaded Danish Health Data Authority's website medinfo.dk.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","text":"n integer determining many diagnoses create.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","text":"character vector ICD-10 diagnoses.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector of random ICD-10 diagnoses — create_fake_icd10","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_icd10(3) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd8.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of random ICD-8 diagnoses — create_fake_icd8","title":"Create a vector of random ICD-8 diagnoses — create_fake_icd8","text":"ICD-8 8th revision International Classification Diseases.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of random ICD-8 diagnoses — create_fake_icd8","text":"","code":"create_fake_icd8(n)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of random ICD-8 diagnoses — create_fake_icd8","text":"n number ICD-8 diagnoses generate.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of random ICD-8 diagnoses — create_fake_icd8","text":"character vector ICD-8 diagnoses.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_icd8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector of random ICD-8 diagnoses — create_fake_icd8","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_icd8(1) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_npu.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of random NPU codes — create_fake_npu","title":"Create a vector of random NPU codes — create_fake_npu","text":"Nomenclature Properties Units (NPUs) codes identifies laboratory results.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_npu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of random NPU codes — create_fake_npu","text":"","code":"create_fake_npu(n)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_npu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of random NPU codes — create_fake_npu","text":"n number NPUs create.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_npu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of random NPU codes — create_fake_npu","text":"character vector.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_fake_npu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector of random NPU codes — create_fake_npu","text":"","code":"if (FALSE) { # \\dontrun{ create_fake_npu(4) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_inclusion_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Create inclusion dates from all the inclusion events — create_inclusion_dates","title":"Create inclusion dates from all the inclusion events — create_inclusion_dates","text":"function takes output join_inclusions() defines final inclusion dates, raw stable based inclusion event types. Since inclusion requires least two events (can multiple events type combination different types), function keeps 2 events. E.g., individual two elevated HbA1c tests followed glucose-lowering drug purchase included latest elevated HbA1c test. second HbA1c test performed (returned result diagnostic threshold), person instead included date first purchase glucose-lowering drugs.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_inclusion_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create inclusion dates from all the inclusion events — create_inclusion_dates","text":"","code":"create_inclusion_dates(inclusions, stable_inclusion_start_date = \"1998-01-01\")"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_inclusion_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create inclusion dates from all the inclusion events — create_inclusion_dates","text":"inclusions Output join_inclusions(). stable_inclusion_start_date Cutoff date inclusion events considered reliable (e.g., changes drug labeling data entry practices). Defaults \"1998-01-01\" one year obstetric codes reliable GLD data (since use LPR data drop rows related gestational diabetes). limits included cohort individuals inclusion dates cutoff date.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_inclusion_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create inclusion dates from all the inclusion events — create_inclusion_dates","text":"type input data, default tibble::tibble(), pnr date columns along columns input needed classify T1D. also creates two new columns: raw_inclusion_date: Date raw inclusion, second earliest recorded event individual. stable_inclusion_date: raw inclusion date, set NA raw inclusion date stable inclusion start date.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_padded_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a vector of reproducible, random zero-padded integers. — create_padded_integer","title":"Create a vector of reproducible, random zero-padded integers. — create_padded_integer","text":"given number generated integers length, always identical. makes easier joining values represent people, e.g. pnr, cpr, recnum dw_ek_kontakt.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_padded_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a vector of reproducible, random zero-padded integers. — create_padded_integer","text":"","code":"create_padded_integer(n, length)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_padded_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a vector of reproducible, random zero-padded integers. — create_padded_integer","text":"n number integer strings generate. length length padded integer strings.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_padded_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a vector of reproducible, random zero-padded integers. — create_padded_integer","text":"character vector integers.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_padded_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a vector of reproducible, random zero-padded integers. — create_padded_integer","text":"","code":"if (FALSE) { # \\dontrun{ create_padded_integer(n = 10, length = 13) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_simulated_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data based on simulation definitions — create_simulated_data","title":"Simulate data based on simulation definitions — create_simulated_data","text":"Simulate data based simulation definitions","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_simulated_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data based on simulation definitions — create_simulated_data","text":"","code":"create_simulated_data(data, n)"},{"path":"https://steno-aarhus.github.io/osdc/reference/create_simulated_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data based on simulation definitions — create_simulated_data","text":"data tibble simulation definitions. n Number observations simulate.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/create_simulated_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data based on simulation definitions — create_simulated_data","text":"tibble simulated data.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pcos.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop rows with metformin purchases that are potentially for the treatment of polycystic ovary syndrome — drop_pcos","title":"Drop rows with metformin purchases that are potentially for the treatment of polycystic ovary syndrome — drop_pcos","text":"Takes output keep_gld_purchases() bef (information sex date birth) drop rows metformin purchases potentially treatment polycystic ovary syndrome. function performs filtering operation outputs structure variables input keep_gld_purchases(), except addition logical helper variable no_pcos used later functions. rows dropped, output used drop_pregnancies().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pcos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop rows with metformin purchases that are potentially for the treatment of polycystic ovary syndrome — drop_pcos","text":"","code":"drop_pcos(gld_purchases, bef)"},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pcos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop rows with metformin purchases that are potentially for the treatment of polycystic ovary syndrome — drop_pcos","text":"gld_purchases output keep_gld_purchases(). bef bef register.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pcos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop rows with metformin purchases that are potentially for the treatment of polycystic ovary syndrome — drop_pcos","text":"type input data, default tibble::tibble(). also columns keep_gld_purchases(), except logical helper variable no_pcos used later functions.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pcos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop rows with metformin purchases that are potentially for the treatment of polycystic ovary syndrome — drop_pcos","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(c(\"lmdb\", \"bef\"), 100) drop_pcos(   gld_purchases = keep_gld_purchases(register_data$lmdb),   bef = register_data$bef ) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pregnancies.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","title":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","text":"function takes combined outputs keep_pregnancy_dates(), keep_hba1c(), drop_pcos() uses diagnoses LPR2 LPR3 drop elevated HbA1c tests GLD purchases pregnancy, may due gestational diabetes, rather type 1 type 2 diabetes. aim identify pregnancies based diagnosis codes specific pregnancy-ending events (e.g. live births miscarriages), use dates events remove inclusion events preceding months may related gestational diabetes (e.g. elevated HbA1c tests purchases glucose-lowering drugs pregnancy).","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pregnancies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","text":"","code":"drop_pregnancies(dropped_pcos, pregnancy_dates, included_hba1c)"},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pregnancies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","text":"dropped_pcos Output drop_pcos(). pregnancy_dates Output keep_pregnancy_dates(). included_hba1c Output keep_hba1c().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pregnancies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","text":"type input data, default tibble::tibble(). output data input drop_pcos(), except helper logical variable no_pregnancy used later functions.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pregnancies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","text":"drop functions applied, output serves inputs : censored HbA1c GLD data passed join_inclusions() function final step inclusion process.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/drop_pregnancies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop pregnancy events that could be gestational diabetes. — drop_pregnancies","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(   c(     \"lpr_adm\",     \"lpr_diag\",     \"kontakter\",     \"diagnoser\",     \"lmdb\",     \"bef\",     \"lab_forsker\"   ),   n = 1000 ) lpr2 <- prepare_lpr2(   lpr_adm = register_data$lpr_adm,   lpr_diag = register_data$lpr_diag ) lpr3 <- prepare_lpr3(   kontakter = register_data$kontakter,   diagnoser = register_data$diagnoser )  # Drop pregnancy dates register_data$lmdb |>   keep_gld_purchases() |>   add_insulin_purchases_cols() |>   drop_pcos(register_data$bef) |>   drop_pregnancies(     keep_pregnancy_dates(lpr2, lpr3),     keep_hba1c(register_data$lab_forsker)   ) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/fct_to_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert all factor variables to character variables. — fct_to_chr","title":"Convert all factor variables to character variables. — fct_to_chr","text":"Convert factor variables character variables.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/fct_to_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert all factor variables to character variables. — fct_to_chr","text":"","code":"fct_to_chr(data)"},{"path":"https://steno-aarhus.github.io/osdc/reference/fct_to_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert all factor variables to character variables. — fct_to_chr","text":"data tibble data frame.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/fct_to_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert all factor variables to character variables. — fct_to_chr","text":"tibble::tibble().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_algorithm_logic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the algorithmic logic and convert to an R logic condition. — get_algorithm_logic","title":"Get the algorithmic logic and convert to an R logic condition. — get_algorithm_logic","text":"Get algorithmic logic convert R logic condition.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_algorithm_logic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the algorithmic logic and convert to an R logic condition. — get_algorithm_logic","text":"","code":"get_algorithm_logic(logic_name, algorithm = NULL)"},{"path":"https://steno-aarhus.github.io/osdc/reference/get_algorithm_logic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the algorithmic logic and convert to an R logic condition. — get_algorithm_logic","text":"logic_name name logic use. algorithm list algorithmic logic, one list .","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_algorithm_logic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the algorithmic logic and convert to an R logic condition. — get_algorithm_logic","text":"character string.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_register_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of the registers' abbreviations. — get_register_abbrev","title":"Get a list of the registers' abbreviations. — get_register_abbrev","text":"Get list registers' abbreviations.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_register_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of the registers' abbreviations. — get_register_abbrev","text":"","code":"get_register_abbrev()"},{"path":"https://steno-aarhus.github.io/osdc/reference/get_register_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of the registers' abbreviations. — get_register_abbrev","text":"character string.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_register_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of the registers' abbreviations. — get_register_abbrev","text":"","code":"if (FALSE) { # \\dontrun{ get_register_abbrev() } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/get_required_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of required variables from a specific register. — get_required_variables","title":"Get a list of required variables from a specific register. — get_required_variables","text":"Get list required variables specific register.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_required_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of required variables from a specific register. — get_required_variables","text":"","code":"get_required_variables(register)"},{"path":"https://steno-aarhus.github.io/osdc/reference/get_required_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of required variables from a specific register. — get_required_variables","text":"register abbreviation register name. See list abbreviations get_register_abbrev().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_required_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of required variables from a specific register. — get_required_variables","text":"character vector variable names.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/get_required_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of required variables from a specific register. — get_required_variables","text":"","code":"if (FALSE) { # \\dontrun{ get_required_variables(\"bef\") } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_analysiscode.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert additional analysis codes for HbA1c — insert_analysiscode","title":"Insert additional analysis codes for HbA1c — insert_analysiscode","text":"Insert additional analysis codes HbA1c","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_analysiscode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert additional analysis codes for HbA1c — insert_analysiscode","text":"","code":"insert_analysiscode(data, proportion = 0.3)"},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_analysiscode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert additional analysis codes for HbA1c — insert_analysiscode","text":"data tibble. proportion Proportion re-sample. Defaults 0.3.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_analysiscode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert additional analysis codes for HbA1c — insert_analysiscode","text":"tibble. column named analysiscode, proportion values replaced codes HbA1c.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_false_metformin.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert cases where metformin is used for other purposes than diabetes — insert_false_metformin","title":"Insert cases where metformin is used for other purposes than diabetes — insert_false_metformin","text":"function uses variable indo code underlying condition treated prescribed medication.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_false_metformin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert cases where metformin is used for other purposes than diabetes — insert_false_metformin","text":"","code":"insert_false_metformin(data, proportion = 0.05)"},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_false_metformin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert cases where metformin is used for other purposes than diabetes — insert_false_metformin","text":"data tibble. proportion Proportion re-sample. Defaults 0.05.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_false_metformin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert cases where metformin is used for other purposes than diabetes — insert_false_metformin","text":"tibble. column names tibble either atc, proportion observations re-sampled metformin.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_specific_atc.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert specific ATC codes based on a proportion — insert_specific_atc","title":"Insert specific ATC codes based on a proportion — insert_specific_atc","text":"Insert specific ATC codes based proportion","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_specific_atc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert specific ATC codes based on a proportion — insert_specific_atc","text":"","code":"insert_specific_atc(data, proportion = 0.3)"},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_specific_atc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert specific ATC codes based on a proportion — insert_specific_atc","text":"data tibble. proportion Proportion resampled. Defaults 0.3.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insert_specific_atc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert specific ATC codes based on a proportion — insert_specific_atc","text":"tibble proportion resampled ATC codes columns named 'atc'","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insertion_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate logic based on a probability — insertion_rate","title":"Generate logic based on a probability — insertion_rate","text":"Generate logic based probability","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insertion_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate logic based on a probability — insertion_rate","text":"","code":"insertion_rate(proportion)"},{"path":"https://steno-aarhus.github.io/osdc/reference/insertion_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate logic based on a probability — insertion_rate","text":"proportion double 0 1.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insertion_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate logic based on a probability — insertion_rate","text":"logic vector. TRUE random number less proportion, otherwise FALSE.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/insertion_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate logic based on a probability — insertion_rate","text":"","code":"if (FALSE) { # \\dontrun{ insertion_rate(0.3) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/join_inclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Join kept events. — join_inclusions","title":"Join kept events. — join_inclusions","text":"function joins outputs filtering functions, pnr dates. Input datasets: diabetes_diagnoses: Dates first second hospital diabetes diagnosis. podiatrist_services: Dates first second diabetes-specific podiatrist record. gld_hba1c_after_drop_steps: Dates first second elevated HbA1c test results (censoring potential gestational diabetes) first second purchase glucose-lowering drug (censoring potential polycystic ovary syndrome gestational diabetes).","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/join_inclusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join kept events. — join_inclusions","text":"","code":"join_inclusions(   diabetes_diagnoses,   podiatrist_services,   gld_hba1c_after_drop_steps )"},{"path":"https://steno-aarhus.github.io/osdc/reference/join_inclusions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join kept events. — join_inclusions","text":"diabetes_diagnoses Output keep_diabetes_diagnoses(). podiatrist_services Output keep_podiatrist_services(). gld_hba1c_after_drop_steps Output drop_pregnancies() drop_pcos().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/join_inclusions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join kept events. — join_inclusions","text":"type input data, default tibble::tibble(), joined columns output keep_diabetes_diagnoses(), keep_podiatrist_services(), drop_pcos(), drop_pregnancies(). 1-8 rows per pnr.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_diabetes_diagnoses.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows with diabetes diagnoses. — keep_diabetes_diagnoses","title":"Keep rows with diabetes diagnoses. — keep_diabetes_diagnoses","text":"function uses hospital contacts LPR2 LPR3 include dates diabetes diagnoses use inclusion, well additional information needed classify diabetes type. Diabetes diagnoses ICD-8 ICD-10 included.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_diabetes_diagnoses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows with diabetes diagnoses. — keep_diabetes_diagnoses","text":"","code":"keep_diabetes_diagnoses(lpr2, lpr3)"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_diabetes_diagnoses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows with diabetes diagnoses. — keep_diabetes_diagnoses","text":"lpr2 output prepare_lpr2(). lpr3 output prepare_lpr3().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_diabetes_diagnoses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows with diabetes diagnoses. — keep_diabetes_diagnoses","text":"type input data, default tibble::tibble(), less rows filtering.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_diabetes_diagnoses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep rows with diabetes diagnoses. — keep_diabetes_diagnoses","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(c(\"lpr_diag\", \"lpr_adm\", \"diagnoser\", \"kontakter\")) keep_diabetes_diagnoses(   lpr2 = prepare_lpr2(register_data$lpr_adm, register_data$lpr_diag),   lpr3 = prepare_lpr3(register_data$kontakter, register_data$diagnoser) ) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_gld_purchases.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows with purchases of glucose lowering drugs (GLD) — keep_gld_purchases","title":"Keep rows with purchases of glucose lowering drugs (GLD) — keep_gld_purchases","text":"function keep glucose-lowering drugs may used conditions diabetes like GLP-RAs dapagliflozin/empagliflozin drugs. Since diagnosis code data pregnancies (see ) insufficient perform censoring prior 1997, keep_gld_purchases() extracts dates 1997 onward default (Medical Birth Register data available use censoring, extraction window can extended).","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_gld_purchases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows with purchases of glucose lowering drugs (GLD) — keep_gld_purchases","text":"","code":"keep_gld_purchases(lmdb)"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_gld_purchases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows with purchases of glucose lowering drugs (GLD) — keep_gld_purchases","text":"lmdb lmdb register.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_gld_purchases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows with purchases of glucose lowering drugs (GLD) — keep_gld_purchases","text":"type input data, default tibble::tibble(). rows glucose lowering drug purchases kept, plus columns renamed.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_gld_purchases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep rows with purchases of glucose lowering drugs (GLD) — keep_gld_purchases","text":"","code":"if (FALSE) { # \\dontrun{ simulate_registers(\"lmdb\", 1000)[[1]] |> keep_gld_purchases() } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_hba1c.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows with HbA1c above the required threshold. — keep_hba1c","title":"Keep rows with HbA1c above the required threshold. — keep_hba1c","text":"lab_forsker register, NPU27300 HbA1c modern units (IFCC) NPU03835 HbA1c old units (DCCT). Multiple elevated results day within individual deduplicated, account test result often reported twice (one IFCC, one DCCT units).","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_hba1c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows with HbA1c above the required threshold. — keep_hba1c","text":"","code":"keep_hba1c(lab_forsker)"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_hba1c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows with HbA1c above the required threshold. — keep_hba1c","text":"lab_forsker lab_forsker register.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_hba1c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows with HbA1c above the required threshold. — keep_hba1c","text":"object input type, default tibble::tibble(), three columns: pnr: Personal identification variable. dates: dates elevated HbA1c test results.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_hba1c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Keep rows with HbA1c above the required threshold. — keep_hba1c","text":"output passed drop_pregnancies() function filtering elevated results due potential gestational diabetes (see ).","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_hba1c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep rows with HbA1c above the required threshold. — keep_hba1c","text":"","code":"if (FALSE) { # \\dontrun{ simulate_registers(\"lab_forsker\", 100)[[1]] |> keep_hba1c() } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_podiatrist_services.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","title":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","text":"function uses sysi sssy registers input extract dates diabetes-specific podiatrist services. Removes duplicate services date. two earliest dates per individual kept.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_podiatrist_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","text":"","code":"keep_podiatrist_services(sysi, sssy)"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_podiatrist_services.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","text":"sysi SYSI register. sssy SSSY register.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_podiatrist_services.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","text":"type input data, default tibble::tibble(), two columns two rows individual: pnr: Identifier variable date: dates first second diabetes-specific podiatrist record","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_podiatrist_services.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","text":"output passed join_inclusions() function final step inclusion process.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_podiatrist_services.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep rows with diabetes-specific podiatrist services. — keep_podiatrist_services","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(c(\"sysi\", \"sssy\"), 100) keep_(register_data$sysi, register_data$sssy) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_pregnancy_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple function to get only the pregnancy event dates. — keep_pregnancy_dates","title":"Simple function to get only the pregnancy event dates. — keep_pregnancy_dates","text":"Simple function get pregnancy event dates.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_pregnancy_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple function to get only the pregnancy event dates. — keep_pregnancy_dates","text":"","code":"keep_pregnancy_dates(lpr2, lpr3)"},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_pregnancy_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple function to get only the pregnancy event dates. — keep_pregnancy_dates","text":"lpr2 Output join_lpr2(). lpr3 Output join_lpr3().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_pregnancy_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple function to get only the pregnancy event dates. — keep_pregnancy_dates","text":"type input data, default tibble::tibble().","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/keep_pregnancy_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple function to get only the pregnancy event dates. — keep_pregnancy_dates","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(   c(\"lpr_adm\", \"lpr_diag\", \"kontakter\", \"diagnoser\"),   n = 1000 ) lpr2 <- prepare_lpr2(register_data$lpr_adm, register_data$lpr_diag) lpr3 <- prepare_lpr3(register_data$diagnoser, register_data$kontakter) keep_pregnancy_dates(lpr2, lpr3) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/logic_as_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the logic strings into R expressions — logic_as_expression","title":"Parse the logic strings into R expressions — logic_as_expression","text":"Parse logic strings R expressions","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/logic_as_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the logic strings into R expressions — logic_as_expression","text":"","code":"logic_as_expression(logic)"},{"path":"https://steno-aarhus.github.io/osdc/reference/logic_as_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the logic strings into R expressions — logic_as_expression","text":"logic name logic use.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/logic_as_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse the logic strings into R expressions — logic_as_expression","text":"R expression.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/osdc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"osdc: Open Source Diabetes Classifier for Danish Registers — osdc-package","title":"osdc: Open Source Diabetes Classifier for Danish Registers — osdc-package","text":"classifier first identifies population individuals type diabetes mellitus splits population T1D T2D identifying individuals T1D classifying remainder diabetes population T2D.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/osdc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"osdc: Open Source Diabetes Classifier for Danish Registers — osdc-package","text":"Maintainer: Luke William Johnston lwjohnst@gmail.com (ORCID) Authors: Signe Kirk Brødbæk signekb@clin.au.dk (ORCID) Anders Aasted Isaksen andaas@rm.dk (ORCID) contributors: Steno Diabetes Center Aarhus [copyright holder] Aarhus University [copyright holder]","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/pad_integers.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero pad an integer to a specific length — pad_integers","title":"Zero pad an integer to a specific length — pad_integers","text":"Zero pad integer specific length","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/pad_integers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero pad an integer to a specific length — pad_integers","text":"","code":"pad_integers(x, width)"},{"path":"https://steno-aarhus.github.io/osdc/reference/pad_integers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero pad an integer to a specific length — pad_integers","text":"x integer vector integers. width integer describing final width zero-padded integer.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/pad_integers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero pad an integer to a specific length — pad_integers","text":"character vector integers.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/pad_integers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero pad an integer to a specific length — pad_integers","text":"","code":"if (FALSE) { # \\dontrun{ pad_integers(x = 1, width = 5) pad_integers(x = c(1, 2, 3), width = 10) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr2.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare and join the two LPR2 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr2","title":"Prepare and join the two LPR2 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr2","text":"output used inputs keep_diabetes_diagnoses() keep_pregnancy_dates().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare and join the two LPR2 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr2","text":"","code":"prepare_lpr2(lpr_adm, lpr_diag)"},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare and join the two LPR2 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr2","text":"lpr_adm LPR2 register containing hospital admissions. lpr_diag LPR2 register containing diabetes diagnoses.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare and join the two LPR2 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr2","text":"type input data, default tibble::tibble(), following columns: pnr: personal identification variable. date: date recorded diagnosis (renamed d_inddto dato_start). is_primary_diagnosis: Whether diagnosis primary diagnosis. is_diabetes_code: Whether diagnosis type diabetes. is_t1d_code: Whether diagnosis T1D-specific. is_t2d_code: Whether diagnosis T2D-specific. is_pregnancy_code: Whether person event related pregnancy like giving birth miscarriage given date. is_endocrinology_dept: Whether diagnosis made endocrinology medical department. is_medical_dept: Whether diagnosis made non-endocrinology medical department.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare and join the two LPR2 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr2","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(c(\"lpr_diag\", \"lpr_adm\"), 100000) lpr2 <- prepare_lpr2(   lpr_diag = register_data$lpr_diag,   lpr_adm = register_data$lpr_adm ) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr3.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare and join the two LPR3 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr3","title":"Prepare and join the two LPR3 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr3","text":"output used inputs keep_diabetes_diagnoses() keep_pregnancy_dates().","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare and join the two LPR3 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr3","text":"","code":"prepare_lpr3(kontakter, diagnoser)"},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare and join the two LPR3 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr3","text":"kontakter LPR3 register containing hospital contacts/admissions. diagnoser LPR3 register containing diabetes diagnoses.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare and join the two LPR3 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr3","text":"type input data, default tibble::tibble(), following columns: pnr: personal identification variable. date: date recorded diagnosis (renamed d_inddto dato_start). is_primary_diagnosis: Whether diagnosis primary diagnosis. is_diabetes_code: Whether diagnosis type diabetes. is_t1d_code: Whether diagnosis T1D-specific. is_t2d_code: Whether diagnosis T2D-specific. is_pregnancy_code: Whether person event related pregnancy like giving birth miscarriage given date. is_endocrinology_dept: Whether diagnosis made endocrinology medical department. is_medical_dept: Whether diagnosis made non-endocrinology medical department.","code":""},{"path":[]},{"path":"https://steno-aarhus.github.io/osdc/reference/prepare_lpr3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare and join the two LPR3 registers to extract diabetes and pregnancy diagnoses. — prepare_lpr3","text":"","code":"if (FALSE) { # \\dontrun{ register_data <- simulate_registers(c(\"diagnoser\", \"kontakter\"), 100000) prepare_lpr3(   kontakter = register_data$kontakter,   diagnoser = register_data$diagnoser ) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/registers.html","id":null,"dir":"Reference","previous_headings":"","what":"Register variables (with descriptions) required for the osdc algorithm. — registers","title":"Register variables (with descriptions) required for the osdc algorithm. — registers","text":"Register variables (descriptions) required osdc algorithm.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/registers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register variables (with descriptions) required for the osdc algorithm. — registers","text":"","code":"registers()"},{"path":"https://steno-aarhus.github.io/osdc/reference/registers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Register variables (with descriptions) required for the osdc algorithm. — registers","text":"Many details within registers() metadata come full official list registers Statistics Denmark (DST): https://www.dst.dk/extranet/forskningvariabellister/Oversigt%20over%20registre.html","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/registers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register variables (with descriptions) required for the osdc algorithm. — registers","text":"Outputs list registers variables required osdc. list item contains official Danish name register, start year, end year, variables descriptions. variables item data frame 4 columns: name official name variable found register. danish_description official Danish description variable. english_description translated English description variable. data_type data type, e.g. \"character\" variable. multiple options (e.g. \"Date\" \"character\").","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/scrape_icd8_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape SDS's website for their ICD-8 codes and saves to a file. — scrape_icd8_codes","title":"Scrape SDS's website for their ICD-8 codes and saves to a file. — scrape_icd8_codes","text":"Scrape SDS's website ICD-8 codes saves file.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/scrape_icd8_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape SDS's website for their ICD-8 codes and saves to a file. — scrape_icd8_codes","text":"","code":"scrape_icd8_codes()"},{"path":"https://steno-aarhus.github.io/osdc/reference/scrape_icd8_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape SDS's website for their ICD-8 codes and saves to a file. — scrape_icd8_codes","text":"Saves CSV file ICD-8 codes. Outputs path saved file.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/scrape_icd8_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrape SDS's website for their ICD-8 codes and saves to a file. — scrape_icd8_codes","text":"","code":"if (FALSE) { # \\dontrun{ scrape_icd8_codes() } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/select_required_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the required variables from the register — select_required_variables","title":"Select the required variables from the register — select_required_variables","text":"function selects required variables, convert lower case, check data types expected.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/select_required_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the required variables from the register — select_required_variables","text":"","code":"select_required_variables(data, register, call = rlang::caller_env())"},{"path":"https://steno-aarhus.github.io/osdc/reference/select_required_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the required variables from the register — select_required_variables","text":"data register select columns . register abbreviation register name. See list abbreviations get_register_abbrev(). call environment function called, error traceback gives meaningful location.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/select_required_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the required variables from the register — select_required_variables","text":"Outputs register required variables, column names lower case.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/select_required_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select the required variables from the register — select_required_variables","text":"","code":"if (FALSE) { # \\dontrun{ select_required_variables(simulate_registers(\"bef\")[[1]], \"bef\") select_required_variables(simulate_registers(\"lpr_adm\")[[1]], \"lpr_adm\") } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/simulate_registers.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a fake data frame of one or more Danish registers — simulate_registers","title":"Simulate a fake data frame of one or more Danish registers — simulate_registers","text":"Simulate fake data frame one Danish registers","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/simulate_registers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a fake data frame of one or more Danish registers — simulate_registers","text":"","code":"simulate_registers(registers, n = 1000)"},{"path":"https://steno-aarhus.github.io/osdc/reference/simulate_registers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a fake data frame of one or more Danish registers — simulate_registers","text":"registers name register want simulate. n number rows simulate resulting register.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/simulate_registers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a fake data frame of one or more Danish registers — simulate_registers","text":"list simulated register data.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/simulate_registers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a fake data frame of one or more Danish registers — simulate_registers","text":"","code":"simulate_registers(c(\"bef\", \"sysi\")) #> $bef #> # A tibble: 1,000 × 3 #>     koen pnr          foed_dato #>    <int> <chr>        <chr>     #>  1     1 108684730664 19320112  #>  2     1 982144017357 20070716  #>  3     2 672580814975 19800805  #>  4     1 439008110445 20090628  #>  5     2 489714666740 20170225  #>  6     1 155331797020 19730330  #>  7     2 777951655096 19341022  #>  8     1 167007504860 20010318  #>  9     2 132473802596 19530901  #> 10     2 876820784981 19310817  #> # ℹ 990 more rows #>  #> $sysi #> # A tibble: 1,000 × 4 #>    pnr          barnmak speciale honuge #>    <chr>          <int> <chr>    <chr>  #>  1 108684730664       0 10022    9329   #>  2 982144017357       0 88475    0442   #>  3 672580814975       0 83575    9549   #>  4 439008110445       1 86409    9603   #>  5 489714666740       0 42818    9215   #>  6 155331797020       0 67148    9924   #>  7 777951655096       0 62545    9727   #>  8 167007504860       1 20866    9632   #>  9 132473802596       0 27002    0213   #> 10 876820784981       0 53825    9419   #> # ℹ 990 more rows #>  simulate_registers(\"bef\") #> $bef #> # A tibble: 1,000 × 3 #>     koen pnr          foed_dato #>    <int> <chr>        <chr>     #>  1     1 108684730664 19320112  #>  2     1 982144017357 20070716  #>  3     1 672580814975 19800805  #>  4     1 439008110445 20090628  #>  5     2 489714666740 20170225  #>  6     1 155331797020 19730330  #>  7     2 777951655096 19341022  #>  8     1 167007504860 20010318  #>  9     1 132473802596 19530901  #> 10     1 876820784981 19310817  #> # ℹ 990 more rows #>  simulate_registers(\"diagnoser\") #> $diagnoser #> # A tibble: 1,000 × 4 #>    dw_ek_kontakt      diagnosekode diagnosetype senere_afkraeftet #>    <chr>              <chr>        <chr>        <chr>             #>  1 920166254345774467 DX7621       B            Nej               #>  2 075972782062569784 DZ832        B            Ja                #>  3 176536283003603061 DQ796        A            Nej               #>  4 581624294965046227 DN764E       A            Nej               #>  5 814210282344580857 DB260        B            Nej               #>  6 393885735973313484 DM13         B            Nej               #>  7 836179506546686729 DZ52         B            Ja                #>  8 814175436846538799 DQ666D       B            Nej               #>  9 508133593881487375 DK660C       A            Nej               #> 10 325077063891132755 DT559B       B            Nej               #> # ℹ 990 more rows #>"},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyww.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform date(s) to the format yyww — to_yyww","title":"Transform date(s) to the format yyww — to_yyww","text":"Transform date(s) format yyww","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyww.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform date(s) to the format yyww — to_yyww","text":"","code":"to_yyww(x)"},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyww.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform date(s) to the format yyww — to_yyww","text":"x date vector dates.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyww.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform date(s) to the format yyww — to_yyww","text":"vector dates format yyww.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyww.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform date(s) to the format yyww — to_yyww","text":"","code":"if (FALSE) { # \\dontrun{ to_yyww(\"2020-12-01\") to_yyww(\"2001-01-01\") to_yyww(c(\"2020-01-12\", \"1995-04-19\")) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyyymmdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform date(s) to the format yyyymmdd — to_yyyymmdd","title":"Transform date(s) to the format yyyymmdd — to_yyyymmdd","text":"Transform date(s) format yyyymmdd","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyyymmdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform date(s) to the format yyyymmdd — to_yyyymmdd","text":"","code":"to_yyyymmdd(x)"},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyyymmdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform date(s) to the format yyyymmdd — to_yyyymmdd","text":"x date vector dates.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyyymmdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform date(s) to the format yyyymmdd — to_yyyymmdd","text":"vector dates format yyyymmdd.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/to_yyyymmdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform date(s) to the format yyyymmdd — to_yyyymmdd","text":"","code":"if (FALSE) { # \\dontrun{ to_yyyymmdd(\"2020-12-01\") to_yyyymmdd(c(\"2020-01-12\", \"1995-04-19\")) } # }"},{"path":"https://steno-aarhus.github.io/osdc/reference/yyww_to_yyyymmdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert date format YYWW to YYYY-MM-DD — yyww_to_yyyymmdd","title":"Convert date format YYWW to YYYY-MM-DD — yyww_to_yyyymmdd","text":"Since exact date given input, function set date Monday week. precaution, leading zero added removed. can e.g., happen input \"0107\" converted numeric 107. need export function can found using Arrow process data.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/yyww_to_yyyymmdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert date format YYWW to YYYY-MM-DD — yyww_to_yyyymmdd","text":"","code":"yyww_to_yyyymmdd(yyww)"},{"path":"https://steno-aarhus.github.io/osdc/reference/yyww_to_yyyymmdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert date format YYWW to YYYY-MM-DD — yyww_to_yyyymmdd","text":"yyww Character(s) format YYWW.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/yyww_to_yyyymmdd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert date format YYWW to YYYY-MM-DD — yyww_to_yyyymmdd","text":"Date(s) format YYYY-MM-DD.","code":""},{"path":"https://steno-aarhus.github.io/osdc/reference/yyww_to_yyyymmdd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert date format YYWW to YYYY-MM-DD — yyww_to_yyyymmdd","text":"","code":"if (FALSE) { # \\dontrun{ yyww_to_yyyymmdd(\"0101\") yyww_to_yyyymmdd(c(\"0102\", \"0304\")) yyww_to_yyyymmdd(953) } # }"}]
